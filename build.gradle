buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'commons-io:commons-io:2.6'

    testCompile 'junit:junit'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.mockito:mockito-core:2.+'
    testCompile 'io.rest-assured:rest-assured:3.3.0'
    testCompile 'io.rest-assured:json-path:3.3.0'
    testCompile 'io.rest-assured:json-schema-validator:3.3.0'
}

configurations {
    apiTestCompile.extendsFrom testCompile
    apiTestRuntime.extendsFrom testRuntime
}

sourceSets {
    apiTest {
        compileClasspath += sourceSets.main.output + configurations.apiTestCompile
        runtimeClasspath += output + compileClasspath + configurations.apiTestRuntime
    }
}

task apiTest(type: Test) {
    testClassesDirs = sourceSets.apiTest.output.classesDirs
    classpath = sourceSets.apiTest.runtimeClasspath

    mustRunAfter test
}
check.dependsOn apiTest

idea {
    module {
        testSourceDirs += file('src/apiTest/java')
        testResourceDirs += file('src/apiTest/resources')
    }
}

mainClassName = 'demo.Application'

sourceCompatibility = 1.8
targetCompatibility = 1.8
